{"version":3,"sources":["appHistory.js","reducers/auth.js","reducers/card-collection.js","reducers/review.js","reducers/network.js","reducers/media.js","reducers/index.js","constants.js","sagas/utils.js","sagas/auth.js","sagas/card-collection.js","sagas/review.js","sagas/media.js","sagas/index.js","store.js","components/AppNavbar.js","pages/LoginPage.js","components/CollectionList.js","pages/HomePage.js","pages/CreateCollectionPage.js","pages/CollectionListPage.js","components/CardModal.js","components/CardActionsModal.js","pages/CollectionEditPage.js","pages/CollectionReviewPage.js","App.js","serviceWorker.js","index.js"],"names":["createHashHistory","initialState","loggedIn","newCollection","newCard","editCollection","collections","reviewCollection","cardIndex","scorecards","busy","error","globalContext","combineReducers","routing","routerReducer","network","state","action","status","auth","type","localStorage","setItem","accessToken","removeItem","coreData","collection","items","id","item_ids","concat","card","map","item","review","complete","scorecard","media","mediaContext","request","url","method","a","async","body","getItem","headers","Authorization","FormData","fetch","JSON","stringify","response","json","text","get","make","baseUrl","post","path","patch","put","doLogin","process","authData","id_token","tokenId","payload","ok","access_token","replace","takeEvery","doCreateCollection","doAddNewCardToCollection","doFetchCollections","doFetchRecentCollections","doViewCollection","doUpdateCollection","doUpdateCardInCollection","doCopyCardToCollection","doCloneCardToCollection","doMoveCardBetweenCollections","cardPayload","collectionPayload","collectionId","collectionsPayload","cardId","toCollectionId","select","editedCollectionId","front","back","clonedId","fromCollectionId","fromCollection","toCollection","filter","fromCollectionPayload","toCollectionPayload","doReviewCollection","doAnswerMatch","collection_id","sort","Math","round","random","sourceItems","uniqBy","itemsWithChoices","choices","Array","min","length","fill","floor","replacedIndex","findIndex","choice","splice","answer","corrects","wrongs","scorecardPayload","correct","doUpload","doRotateLeft","doRotateRight","httpPut","file","formData","append","doRotate","mediaId","op","console","log","rootSaga","all","cardAndCollection","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","compose","sagaMiddleware","createSagaMiddleware","routerMW","routerMiddleware","appHistory","connect","dispatch","className","children","Navbar","Nav","NavItem","NavbarBrand","onClick","buttonText","approvalPrompt","clientId","scope","onSuccess","onFailure","HealthIndicator","stats","corrects_ratio","icon","faSmile","title","faSadCry","CollectionList","ListGroup","flush","ListGroupItem","ButtonGroup","Button","size","color","push","faLayerGroup","defaultProps","HomePage","isLoading","useEffect","Container","Row","Col","widths","Modal","isOpen","ModalBody","undefined","tags","params","useParams","useState","setCollection","isPristine","setCard","step","Label","Input","value","placeholder","onChange","target","rows","split","CardModal","editCard","onSave","onClose","onDrop","useCallback","files","acceptedFiles","onRotateLeft","e","stopPropagation","editedMedia","media_id","onRotateRight","useDropzone","getRootProps","getInputProps","isDragActive","ModalHeader","Form","FormGroup","row","inline","tag","checked","includes","indexOf","src","Date","now","faUndo","faRedo","ModalFooter","isNew","props","onAccept","setChoice","setCollections","fetchCollections","setCollectionId","name","then","editedCollection","cardModalShown","setCardModalShown","editCardModalShown","setEditCardModalShown","setEditCard","cardActionsModalShown","setCardActionsModalShown","updateCard","updatedCard","NavLink","href","onBlur","key","lastScorecard","Table","responsive","skippeds","store","createStore","rootReducer","applyMiddleware","run","configureStore","App","history","exact","component","LoginPage","CreateCollectionPage","CollectionListPage","CollectionEditPage","CollectionReviewPage","to","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e69bd74.chunk.js","sourcesContent":["import { createHashHistory } from 'history';\n\nexport default createHashHistory();\n","import { ACTION_LOGIN, STATUS_PENDING, STATUS_SUCCESS } from '../constants';\n\nconst initialState = {\n  loggedIn: false,\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  switch (action.type) {\n    case ACTION_LOGIN: {\n      if (action.status === STATUS_SUCCESS) {\n        localStorage.setItem('access_token', action.accessToken);\n        return {\n          ...state,\n          loggedIn: true,\n        };\n      } else {\n        localStorage.removeItem('access_token');\n        return {\n          ...state,\n          loggedIn: false,\n        };\n      }\n    }\n    default: return state;\n  }\n};\n","import {\n  CREATE_CARD_IN_NEW_COLLECTION,\n  CREATE_COLLECTION,\n  FETCH_COLLECTIONS,\n  VIEW_COLLECTION,\n  STATUS_PENDING,\n  STATUS_SUCCESS, CREATE_CARD_IN_COLLECTION, UPDATE_CARD_IN_COLLECTION, FETCH_RECENT_COLLECTIONS\n} from '../constants';\n\nconst initialState = {\n  newCollection: null,\n  newCard: null,\n  editCollection: null,\n  collections: [],\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  switch (action.type) {\n    case CREATE_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          newCollection: {\n            ...action.collection,\n            items: [],\n          },\n        };\n      }\n\n      return state;\n    }\n    case CREATE_CARD_IN_NEW_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        if (state.newCollection && action.collection.id === state.newCollection.id) {\n          return {\n            ...state,\n            newCollection: {\n              ...state.newCollection,\n              item_ids: state.newCollection.item_ids.concat(action.card.id),\n              items: state.newCollection.items.concat(action.card),\n            },\n            newCard: action.card,\n          };\n        }\n      }\n\n      return state;\n    }\n    case UPDATE_CARD_IN_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        const editCollection = {\n          ...action.collection,\n          items: action.collection.items.map(item => {\n            if (item.id === action.card.id) {\n              return action.card;\n            }\n\n            return item;\n          })\n        };\n\n        return {\n          ...state,\n          editCollection,\n        };\n      }\n      return state;\n    }\n    case FETCH_COLLECTIONS:\n    case FETCH_RECENT_COLLECTIONS: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          collections: action.collections,\n        };\n      }\n\n      return state;\n    }\n    case VIEW_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          editCollection: {\n            ...action.collection,\n          },\n        };\n      }\n\n      return state;\n    }\n    default: return state;\n  }\n};\n","import {\n  ANSWER_MATCH,\n  REVIEW_CARD,\n  REVIEW_COLLECTION, REVIEW_RESULT,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n} from '../constants';\n\nconst initialState = {\n  reviewCollection: null,\n  cardIndex: 0,\n  scorecards: [],\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  switch (action.type) {\n    case REVIEW_COLLECTION: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          scorecards: [],\n          reviewCollection: {\n            ...action.collection,\n          },\n          cardIndex: action.cardIndex,\n          complete: false,\n        };\n      }\n\n      return state;\n    }\n    case REVIEW_CARD: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          cardIndex: action.cardIndex,\n        };\n      }\n\n      return state;\n    }\n    case ANSWER_MATCH: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          scorecards: state.scorecards.concat(action.scorecard),\n        };\n      }\n\n      return state;\n    }\n    case REVIEW_RESULT: {\n      if (action.status === STATUS_SUCCESS) {\n        return {\n          ...state,\n          complete: true,\n        };\n      }\n\n      return state;\n    }\n    default: return state;\n  }\n};\n","import { STATUS_ERROR, STATUS_PENDING, STATUS_SUCCESS } from '../constants';\n\nconst initialState = {\n  busy: false,\n  error: null,\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return {\n      ...state,\n      busy: true,\n    };\n  } else if (action.status === STATUS_ERROR) {\n    return {\n      ...state,\n      busy: false,\n      error: action.error,\n    };\n  } else if (action.status === STATUS_SUCCESS) {\n    return {\n      ...state,\n      error: null,\n      busy: false,\n    }\n  }\n\n  return initialState;\n}\n","import { ROTATE_IMAGE_LEFT, ROTATE_IMAGE_RIGHT, STATUS_PENDING, STATUS_SUCCESS, UPLOAD_ASSET } from '../constants';\n\nconst initialState = {\n  globalContext: {},\n};\n\nexport default (state=initialState, action) => {\n  if (action.status === STATUS_PENDING) {\n    return state;\n  }\n\n  if (action.status !== STATUS_SUCCESS) {\n    return state;\n  }\n\n  switch (action.type) {\n    case UPLOAD_ASSET:\n    case ROTATE_IMAGE_LEFT:\n    case ROTATE_IMAGE_RIGHT: {\n      return {\n        ...state,\n        // TODO Remove items if there are too many\n        [action.mediaContext]: action.media,\n      }\n    }\n  }\n\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport auth from './auth';\nimport coreData from './card-collection';\nimport review from './review';\nimport network from './network';\nimport media from './media';\n\nexport default combineReducers({\n  routing: routerReducer,\n  network,\n  auth,\n  coreData,\n  review,\n  media,\n});\n","export const STATUS_PENDING = 'pending';\nexport const STATUS_ERROR = 'error';\nexport const STATUS_SUCCESS = 'success';\n\nexport const ACTION_LOGIN = 'login';\nexport const CREATE_COLLECTION = 'create-collection';\nexport const CREATE_CARD_IN_NEW_COLLECTION = 'create-card-in-new-collection';\nexport const CREATE_CARD_IN_COLLECTION = 'create-card-in-collection';\nexport const UPDATE_CARD_IN_COLLECTION = 'update-card-in-collection';\nexport const FETCH_COLLECTIONS = 'fetch-collections';\nexport const FETCH_RECENT_COLLECTIONS = 'fetch-recent-collections';\nexport const FETCH_ORPHAN_CARDS = 'fetch-orphan-cards';\nexport const VIEW_COLLECTION = 'view-collection';\nexport const UPDATE_COLLECTION = 'update-collection';\nexport const ADD_CARD_TO_COLLECTION = 'add-card-to-collection';\nexport const REVIEW_COLLECTION = 'review-collection';\nexport const ANSWER_MATCH = 'answer-match';\nexport const REVIEW_CARD = 'review-card';\nexport const REVIEW_RESULT = 'review-result';\nexport const UPLOAD_ASSET = 'upload-asset';\nexport const ROTATE_IMAGE_LEFT = 'rotate-image-left';\nexport const ROTATE_IMAGE_RIGHT = 'rotate-image-right';\n\nexport const MOVE_CARD = 'move-card';\nexport const COPY_CARD = 'copy-card';\nexport const CLONE_CARD = 'clone-card';\n\nexport const CARD_ACTION_MOVE = 'MOVE';\nexport const CARD_ACTION_COPY = 'COPY';\nexport const CARD_ACTION_CLONE = 'CLONE';\n","async function request(url, method, body=null) {\n  const accessToken = localStorage.getItem('access_token');\n\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(accessToken ? {\n        Authorization: `Bearer ${accessToken}`,\n    } : {})\n  };\n\n  if (body instanceof FormData) {\n    delete headers['Content-Type'];\n  }\n\n  const response = await fetch(url, {\n    method,\n    headers,\n    body: headers['Content-Type'] === 'application/json' ? (body && JSON.stringify(body)) : body,\n  });\n\n  if (response.status < 500) {\n    return response.json();\n  } else {\n    return response.text();\n  }\n}\n\nexport async function post(url, body) {\n  return request(url, 'POST', body);\n}\n\nexport async function patch(url, body) {\n  return request(url, 'PATCH', body);\n}\n\nexport async function put(url, body) {\n  return request(url, 'PUT', body);\n}\n\nexport async function get(url) {\n  return request(url, 'GET');\n}\n\nexport const make = (baseUrl) => ({\n  post(path, body) {\n    return post(`${baseUrl}${path}`, body);\n  },\n  patch(path, body) {\n    return patch(`${baseUrl}${path}`, body);\n  },\n  put(path, body) {\n    return put(`${baseUrl}${path}`, body);\n  },\n  get(path) {\n    return get(`${baseUrl}${path}`);\n  }\n});\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { replace } from 'react-router-redux';\nimport { ACTION_LOGIN, STATUS_ERROR, STATUS_PENDING, STATUS_SUCCESS } from '../constants';\nimport { make } from './utils';\n\nconst { post } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doLogin(action) {\n  const { authData } = action;\n  const payload = yield post('/auth/register', {\n    id_token: authData.tokenId,\n  });\n\n  if (!payload.ok) {\n    yield put({ type: ACTION_LOGIN, status: STATUS_ERROR, error: payload.error });\n  } else {\n    yield put({ type: ACTION_LOGIN, status: STATUS_SUCCESS, accessToken: payload.access_token });\n    yield put(replace('/'));\n  }\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === ACTION_LOGIN && status === STATUS_PENDING, doLogin);\n}\n","import { put, select, takeEvery } from 'redux-saga/effects';\nimport {\n  CREATE_CARD_IN_NEW_COLLECTION,\n  CREATE_CARD_IN_COLLECTION,\n  CREATE_COLLECTION,\n  FETCH_COLLECTIONS,\n  FETCH_RECENT_COLLECTIONS,\n  UPDATE_COLLECTION,\n  VIEW_COLLECTION,\n  STATUS_ERROR,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n  UPDATE_CARD_IN_COLLECTION,\n  COPY_CARD,\n  MOVE_CARD,\n  CLONE_CARD\n} from '../constants';\nimport { make } from './utils';\nimport { replace } from 'react-router-redux';\n\nconst { get, patch, post } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doCreateCollection(action) {\n  const { collection } = action;\n  const payload = yield post('/collections', collection);\n\n  if (!payload.ok) {\n    yield put({ type: CREATE_COLLECTION, status: STATUS_ERROR, error: payload.error });\n  } else {\n    yield put({ type: CREATE_COLLECTION, status: STATUS_SUCCESS, collection: payload.collection });\n    yield put(replace('/create-collection/step-1'));\n  }\n}\n\nfunction* doAddNewCardToCollection(action) {\n  const { type, collection, card } = action;\n  const cardPayload = yield post('/cards', card);\n  if (!cardPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: cardPayload.error });\n    return;\n  }\n\n  const collectionPayload = yield patch(`/collections/${collection.id}`, {\n    item_ids: collection.item_ids.concat(cardPayload.card.id),\n  });\n  if (!cardPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  if (type === CREATE_CARD_IN_NEW_COLLECTION) {\n    yield put({\n      type,\n      status: STATUS_SUCCESS,\n      collection: collectionPayload.collection,\n      card: cardPayload.card,\n    });\n  } else {\n    yield doViewCollection({ collectionId: collectionPayload.collection.id });\n  }\n}\n\nfunction* doFetchCollections(action) {\n  const collectionsPayload = yield get('/collections?features=stats');\n  if (!collectionsPayload.ok) {\n    yield put({ type: FETCH_COLLECTIONS, status: STATUS_ERROR, error: collectionsPayload.error });\n    return;\n  }\n\n  yield put({\n    type: FETCH_COLLECTIONS,\n    status: STATUS_SUCCESS,\n    collections: collectionsPayload.collections,\n  });\n}\n\nfunction* doFetchRecentCollections(action) {\n  const { type } = action;\n  const collectionsPayload = yield get('/collections/recent?features=stats');\n  if (!collectionsPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: collectionsPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collections: collectionsPayload.collections,\n  });\n}\n\nfunction* doViewCollection(action) {\n  const { collectionId } = action;\n  const collectionPayload = yield get(`/collections/${collectionId}`);\n  if (!collectionPayload.ok) {\n    yield put({ type: VIEW_COLLECTION, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type: VIEW_COLLECTION,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n}\n\nfunction* doUpdateCollection(action) {\n  const { collection: { id, ...collection } } = action;\n  const collectionPayload = yield patch(`/collections/${id}`, collection);\n  if (!collectionPayload.ok) {\n    yield put({ type: UPDATE_COLLECTION, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type: UPDATE_COLLECTION,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n}\n\nfunction* doUpdateCardInCollection(action) {\n  const { type, collection, card: { id, ...card } } = action;\n  const cardPayload = yield patch(`/cards/${id}`, card);\n\n  if (!cardPayload.ok) {\n    yield put({ type, status: STATUS_ERROR, error: cardPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collection,\n    card: cardPayload.card,\n  });\n}\n\nfunction* doCopyCardToCollection(action) {\n  const { type, cardId, toCollectionId } = action;\n  const editedCollectionId = yield select(state => state.coreData.editCollection.id);\n\n  const { collection } = yield get(`/collections/${toCollectionId}`);\n  if (!collection) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n  const collectionPayload = yield patch(`/collections/${toCollectionId}`, {\n    ...collection,\n    item_ids: collection.item_ids.concat(cardId),\n  });\n  if (!collectionPayload.ok) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n\n  yield doViewCollection({ collectionId: editedCollectionId });\n}\n\nfunction* doCloneCardToCollection(action) {\n  const { type, cardId, toCollectionId } = action;\n\n  const { card } = yield get(`/cards/${cardId}`);\n  if (!card) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: 'Card not found' });\n    return;\n  }\n  const { card: { id: clonedId } = {} } = yield post('/cards', {\n    front: card.front,\n    back: card.back,\n  });\n  if (!clonedId) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: 'Card not found' });\n    return;\n  }\n\n  const { collection } = yield get(`/collections/${toCollectionId}`);\n  if (!collection) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n  const collectionPayload = yield patch(`/collections/${toCollectionId}`, {\n    ...collection,\n    item_ids: collection.item_ids.map(item => item === cardId ? clonedId : item),\n  });\n  if (!collectionPayload.ok) {\n    yield put({ type: CLONE_CARD, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n    collection: collectionPayload.collection,\n  });\n\n  yield doViewCollection({ collectionId: toCollectionId });\n}\n\nfunction* doMoveCardBetweenCollections(action) {\n  const { type, cardId, fromCollectionId, toCollectionId } = action;\n\n  const { collection: fromCollection } = yield get(`/collections/${fromCollectionId}`);\n  if (!fromCollection) {\n    yield put({ type: MOVE_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n\n  const { collection: toCollection } = yield get(`/collections/${toCollectionId}`);\n  if (!toCollection) {\n    yield put({ type: MOVE_CARD, status: STATUS_ERROR, error: 'Collection not found' });\n    return;\n  }\n  const fromCollectionPayload = yield patch(`/collections/${fromCollectionId}`, {\n    ...fromCollection,\n    item_ids: fromCollection.item_ids.filter(item => item !== cardId),\n  });\n  if (!fromCollectionPayload.ok) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: fromCollectionPayload.error });\n    return;\n  }\n\n  const toCollectionPayload = yield patch(`/collections/${toCollectionId}`, {\n    ...toCollection,\n    item_ids: toCollection.item_ids.concat(cardId),\n  });\n  if (!toCollectionPayload.ok) {\n    yield put({ type: COPY_CARD, status: STATUS_ERROR, error: toCollectionPayload.error });\n    return;\n  }\n\n  yield put({\n    type,\n    status: STATUS_SUCCESS,\n  });\n\n  yield doViewCollection({ collectionId: fromCollectionId });\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === CREATE_COLLECTION && status === STATUS_PENDING, doCreateCollection);\n  yield takeEvery(({ type, status }) => (type === CREATE_CARD_IN_NEW_COLLECTION || type === CREATE_CARD_IN_COLLECTION)\n    && status === STATUS_PENDING, doAddNewCardToCollection);\n  yield takeEvery(({ type, status }) => type === UPDATE_CARD_IN_COLLECTION && status === STATUS_PENDING, doUpdateCardInCollection);\n  yield takeEvery(({ type, status }) => type === FETCH_COLLECTIONS && status === STATUS_PENDING, doFetchCollections);\n  yield takeEvery(({ type, status }) => type === FETCH_RECENT_COLLECTIONS && status === STATUS_PENDING, doFetchRecentCollections);\n  yield takeEvery(({ type, status }) => type === VIEW_COLLECTION && status === STATUS_PENDING, doViewCollection);\n  yield takeEvery(({ type, status }) => type === UPDATE_COLLECTION && status === STATUS_PENDING, doUpdateCollection);\n  yield takeEvery(({ type, status }) => type === COPY_CARD && status === STATUS_PENDING, doCopyCardToCollection);\n  yield takeEvery(({ type, status }) => type === MOVE_CARD && status === STATUS_PENDING, doMoveCardBetweenCollections);\n  yield takeEvery(({ type, status }) => type === CLONE_CARD && status === STATUS_PENDING, doCloneCardToCollection);\n}\n","import { put, select, takeEvery } from 'redux-saga/effects';\nimport { replace } from 'react-router-redux';\nimport uniqBy from 'lodash.uniqby';\nimport {\n  ANSWER_MATCH, REVIEW_CARD,\n  REVIEW_COLLECTION, REVIEW_RESULT,\n  STATUS_ERROR,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n} from '../constants';\nimport { make } from './utils';\n\nconst { get, patch } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doReviewCollection(action) {\n  const { collectionId } = action;\n  const collectionPayload = yield get(`/collections/${collectionId}`);\n  if (!collectionPayload.ok) {\n    yield put({ type: REVIEW_COLLECTION, status: STATUS_ERROR, error: collectionPayload.error });\n    return;\n  }\n  yield patch(`/me/recent-collections`, { collection_id: collectionId });\n\n  const { items } = collectionPayload.collection;\n  items.sort(() => Math.round(Math.random() * 2 - 1));\n  const TOTAL_OPTIONS = 4;\n  const sourceItems = uniqBy(items, 'back');\n  const itemsWithChoices = items.map(item => {\n    const choices = new Array(Math.min(sourceItems.length - 1, TOTAL_OPTIONS)).fill(0).map(() => (\n      sourceItems[Math.floor(Math.random() * sourceItems.length)]\n    ));\n\n    // Replace one of the four choices with the item in question\n    // - at a random index if the item is not already included\n    // - at the index where an item with \"back\" matches the back of the item in question\n    let replacedIndex = choices.findIndex(choice => item.back === choice.back);\n    if (replacedIndex === -1) {\n      replacedIndex = Math.floor(Math.random() * TOTAL_OPTIONS);\n    }\n    choices.splice(replacedIndex, 1, item);\n\n    return {\n      ...item,\n      choices,\n    };\n  });\n\n  yield put({\n    type: REVIEW_COLLECTION,\n    status: STATUS_SUCCESS,\n    collection: {\n      ...collectionPayload.collection,\n      items: itemsWithChoices,\n    },\n    cardIndex: 0,\n  });\n}\n\nfunction* doAnswerMatch(action) {\n  const { answer: { card, choice } } = action;\n  const payload = card.id === choice.id\n    ? {\n      corrects: 1,\n    }\n    : {\n      wrongs: 1,\n    };\n  const scorecardPayload = yield patch(`/me/scorecard/${card.id}`, payload);\n  if (!scorecardPayload.ok) {\n    yield put({ type: ANSWER_MATCH, status: STATUS_ERROR, error: scorecardPayload.error });\n    return;\n  }\n\n  yield put({\n    type: ANSWER_MATCH,\n    status: STATUS_SUCCESS,\n    scorecard: {\n      ...scorecardPayload.scorecard,\n      card,\n      correct: card.id === choice.id,\n    },\n  });\n\n  const { reviewCollection, cardIndex } = yield select(state => ({\n    reviewCollection: state.review.reviewCollection,\n    cardIndex: state.review.cardIndex,\n  }));\n\n  if (cardIndex < reviewCollection.items.length - 1) {\n    yield put({\n      type: REVIEW_CARD,\n      status: STATUS_SUCCESS,\n      cardIndex: cardIndex + 1,\n    });\n  } else {\n    yield put({\n      type: REVIEW_RESULT,\n      status: STATUS_SUCCESS,\n    });\n    yield put(replace('/review/result'));\n  }\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === REVIEW_COLLECTION && status === STATUS_PENDING, doReviewCollection);\n  yield takeEvery(({ type, status }) => type === ANSWER_MATCH && status === STATUS_PENDING, doAnswerMatch);\n}\n","import { put, takeEvery } from 'redux-saga/effects';\nimport {\n  ROTATE_IMAGE_LEFT,\n  ROTATE_IMAGE_RIGHT,\n  STATUS_ERROR,\n  STATUS_PENDING,\n  STATUS_SUCCESS,\n  UPLOAD_ASSET\n} from '../constants';\nimport { make } from './utils';\n\nconst { post, put: httpPut } = make(process.env.REACT_APP_API_BASE_URL);\n\nfunction* doUpload(action) {\n  const { type, mediaContext, file } = action;\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    const payload = yield post('/media', formData);\n\n    if (!payload.ok) {\n      yield put({ type, status: STATUS_ERROR, error: payload.error });\n    } else {\n      yield put({ type, status: STATUS_SUCCESS, mediaContext, media: payload.media });\n    }\n  } catch (e) {\n    yield put({ type, status: STATUS_ERROR, error: e });\n  }\n}\n\nasync function doRotate(mediaId, op) {\n  console.log(`Rotating media ${mediaId}...`);\n  return httpPut(`/media/${mediaId}?op=${op}`);\n}\n\nfunction* doRotateLeft(action) {\n  const { type, mediaContext, media } = action;\n  try {\n    const payload = yield doRotate(media.id, 'rotate_left');\n    yield put({ type, status: STATUS_SUCCESS, mediaContext, media: payload.media });\n  } catch (e) {\n    yield put({ type, status: STATUS_ERROR, mediaContext, error: e });\n  }\n}\n\nfunction* doRotateRight(action) {\n  const { type, mediaContext, media } = action;\n  try {\n    const payload = yield doRotate(media.id, 'rotate_right');\n    yield put({ type, status: STATUS_SUCCESS, mediaContext, media: payload.media });\n  } catch (e) {\n    yield put({ type, status: STATUS_ERROR, mediaContext, error: e });\n  }\n}\n\nexport default function* () {\n  yield takeEvery(({ type, status }) => type === UPLOAD_ASSET && status === STATUS_PENDING, doUpload);\n  yield takeEvery(({ type, status }) => type === ROTATE_IMAGE_LEFT && status === STATUS_PENDING, doRotateLeft);\n  yield takeEvery(({ type, status }) => type === ROTATE_IMAGE_RIGHT && status === STATUS_PENDING, doRotateRight);\n}\n","import { all } from 'redux-saga/effects';\nimport auth from './auth';\nimport cardAndCollection from './card-collection';\nimport review from './review';\nimport media from './media';\n\n// single entry point to start all Sagas at once\nexport default function* rootSaga() {\n  yield all([auth(), cardAndCollection(), review(), media(), /*, another saga here*/]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { compose } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'react-router-redux';\n\nimport appHistory from './appHistory';\nimport rootReducer from './reducers';\nimport rootSaga from \"./sagas\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ shouldHotReload: false }) : compose;\n\nconst sagaMiddleware = createSagaMiddleware();\nconst routerMW = routerMiddleware(appHistory);\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMW))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      console.log('Hot reloading reducers...');\n    });\n  }\n\n  return store;\n}\n","import React from 'react';\nimport { replace } from 'react-router-redux';\nimport { Nav, Navbar, NavbarBrand, NavItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nconst AppNavbar = ({ dispatch, className, children }) => (\n  <Navbar className={className}>\n    <Nav>\n      <NavItem>\n        <NavbarBrand onClick={() => dispatch(replace('/'))}>Karteikarten</NavbarBrand>\n      </NavItem>\n      {children}\n    </Nav>\n  </Navbar>\n);\n\nexport default connect(null, dispatch => ({ dispatch }))(AppNavbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\n\nimport { ACTION_LOGIN, STATUS_ERROR, STATUS_PENDING } from '../constants';\n\nconst GOOGLE_OAUTH_CLIENT_ID = process.env.REACT_APP_GOOGLE_OATH_CLIENT_ID;\n\nconst LoginPage = ({ dispatch }) => (\n  <div className='container-fluid'>\n    <div className='row justify-content-center'>\n      <div className='col-7 karteikarten-login'>\n        <h1>Login</h1>\n        <GoogleLogin\n          buttonText='Login with Google'\n          approvalPrompt='force'\n          clientId={GOOGLE_OAUTH_CLIENT_ID}\n          scope='profile email'\n          onSuccess={(authData) => dispatch({ type: ACTION_LOGIN, status: STATUS_PENDING, authData })}\n          onFailure={(authData) => dispatch({ type: ACTION_LOGIN, status: STATUS_ERROR, authData })}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default connect(null, dispatch => ({ dispatch }))(LoginPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup, ListGroup, ListGroupItem, Badge } from 'reactstrap';\nimport { push } from 'react-router-redux';\nimport { connect } from 'react-redux';\n\nimport { faSmile, faSadCry, faLayerGroup } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst HealthIndicator = ({ stats }) => {\n  if (stats.corrects_ratio >= 0.625) {\n    return (\n      <FontAwesomeIcon\n        icon={faSmile} className='text-success'\n        title={`Correct ratio ${stats.corrects_ratio * 100}%`}\n      />\n    );\n  }\n\n  return (\n    <FontAwesomeIcon\n      icon={faSadCry} className='text-warning'\n      title={`Correct ratio ${stats.corrects_ratio * 100}%`}\n    />\n  );\n};\n\nconst CollectionList = ({ dispatch, collections, className }) => (\n  <ListGroup className={className || ''} flush>\n    {collections.map(collection => (\n      <ListGroupItem className='pl-0 pr-0'>\n        <div className='float-right'>\n          {collection.stats && <HealthIndicator stats={collection.stats} />}\n          <ButtonGroup>\n            <Button\n              size='sm'\n              color='link'\n              onClick={() => dispatch(push(`/collections/${collection.id}`))}\n            >View</Button>\n            <Button\n              size='sm'\n              color='link'\n              onClick={() => dispatch(push(`/review/${collection.id}`))}\n            >Review</Button>\n          </ButtonGroup>\n        </div>\n        <>\n          <FontAwesomeIcon icon={faLayerGroup} /> {collection.title}\n        </>\n      </ListGroupItem>\n    ))}\n  </ListGroup>\n);\n\nCollectionList.propTypes = {\n  collections: PropTypes.array.isRequired,\n  className: PropTypes.string\n};\n\nCollectionList.defaultProps = {\n  collections: [],\n};\n\nexport default connect(null, dispatch => ({ dispatch }))(CollectionList);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { replace } from 'react-router-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col, Modal, ModalBody, Button } from 'reactstrap';\n\nimport { FETCH_RECENT_COLLECTIONS, STATUS_PENDING } from '../constants';\nimport CollectionList from '../components/CollectionList';\n\nconst HomePage = ({ dispatch, isLoading, collections }) => {\n  useEffect(() => {\n    dispatch({ type: FETCH_RECENT_COLLECTIONS, status: STATUS_PENDING });\n  }, []);\n\n  if (isLoading) {\n    return (<div className=\"text-center\">Loading...</div>);\n  }\n\n  if (!collections.length) {\n    return (\n      <Modal isOpen={true}>\n        <ModalBody>\n          <p className=\"display-4 text-center\">Welcome to Karteikarten!</p>\n          <p>Let's create your first collection!</p>\n          <Row className='justify-content-center'>\n            <Button\n              color=\"primary\"\n              onClick={() => dispatch(replace('/create-collection'))}\n            >Let's go!</Button>\n          </Row>\n        </ModalBody>\n      </Modal>\n    );\n  }\n\n  return (\n    <Container>\n      <h1 className='page-title'>Dashboard</h1>\n      <Row>\n        <Col widths={[12]}>\n          <h2>Recent collections</h2>\n          <CollectionList collections={collections} />\n        </Col>\n      </Row>\n      {/* TODO: Either statistics or progress or challenge others */}\n    </Container>\n  );\n};\n\nHomePage.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  collections: PropTypes.array.isRequired,\n};\n\nHomePage.defaultProps = {\n  isLoading: true,\n  collections: [],\n};\n\nconst mapStateToProps = (state) => ({\n  collections: state.coreData.collections,\n  isLoading: state.network.busy,\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(HomePage);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Label, Button, Input } from 'reactstrap';\n\nimport { CREATE_CARD_IN_NEW_COLLECTION, CREATE_COLLECTION, STATUS_PENDING } from '../constants';\nimport { useParams } from 'react-router';\nimport { replace } from 'react-router-redux';\n\nconst CreateCollectionPage = (\n  {\n    dispatch,\n    newCollection = { id: null, title: '', tags: '' },\n  }\n) => {\n  const params = useParams();\n  const [collection, setCollection] = useState(newCollection);\n  const [card, setCard] = useState({ id: null, isPristine: true, front: '', back: '' });\n\n  useEffect(() => {\n    setCollection(newCollection);\n  }, [\n    newCollection.id,\n  ]);\n  useEffect(() => {\n    setCard({ id: null, isPristine: true, front: '', back: '' });\n  }, [\n    newCollection.id,\n    newCollection.items,\n  ]);\n\n  const step = params && params.step || 'step-0';\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-12'>\n          <h1 className='page-title'>Create Your Collection</h1>\n\n          {step === 'step-0' &&\n          <>\n          <Row className='mb-2'>\n            <Label className='col-form-label text-right col-3'>Title</Label>\n            <Input\n              className='col-7 font-weight-bold'\n              value={collection.title}\n              placeholder={'No name'}\n              onChange={({ target: { value } }) => {\n                setCollection({ ...collection, title: value })\n              }}\n            />\n          </Row>\n          <Row className='mb-2'>\n            <Label className='col-form-label text-right col-3'>Tags</Label>\n            <Input\n              type='textarea'\n              className='col-7'\n              rows={2}\n              onChange={({ target: { value } }) => {\n                setCollection({ ...collection, tags: value.split(/\\n+|\\s+/) })\n              }}\n            />\n          </Row>\n          <Row className='mt-2'>\n            <div className='offset-3'>\n              <Button\n                color='primary'\n                onClick={() => dispatch({ type: CREATE_COLLECTION, status: STATUS_PENDING, collection })}\n              >Create</Button>\n            </div>\n          </Row>\n          </>\n          }\n          {step === 'step-1' &&\n          <>\n            <Row>\n              <ul className='list-inline'>\n                {newCollection.items && newCollection.items.map(item => (\n                  <li className='list-inline-item'>{item.front}</li>\n                ))}\n              </ul>\n            </Row>\n            <Row>\n              <Label className='col-form-label text-right col-3'>Front</Label>\n              <Input\n                className='col-7 font-weight-bold'\n                value={card.front}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, isPristine: false, front: value })\n                }}\n              />\n            </Row>\n            <Row className='pt-2'>\n              <Label className='col-form-label text-right col-3'>Back</Label>\n              <Input\n                className='col-7 font-weight-bold'\n                value={card.back}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, back: value })\n                }}\n              />\n            </Row>\n            <Row className='justify-content-center pt-3'>\n              <Button\n                color='primary'\n                onClick={() => dispatch({\n                  type: CREATE_CARD_IN_NEW_COLLECTION,\n                  status: STATUS_PENDING,\n                  collection: newCollection,\n                  card,\n                })}\n              >Add to Collection</Button>\n              <Button\n                color='default'\n                onClick={() => dispatch(replace('/collections'))}\n              >Finish</Button>\n            </Row>\n          </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  newCollection: state.coreData.newCollection || undefined,\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CreateCollectionPage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { push, replace } from 'react-router-redux';\nimport {\n  Row, ListGroup, ListGroupItem, ButtonGroup, Button,\n} from 'reactstrap';\n\nimport { FETCH_COLLECTIONS, STATUS_PENDING } from '../constants';\nimport CollectionList from '../components/CollectionList';\n\nconst CollectionListPage = ({ dispatch, collections }) => {\n  useEffect(() => {\n    dispatch({ type: FETCH_COLLECTIONS, status: STATUS_PENDING });\n  }, []);\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-12'>\n          <h1 className='page-title'>Your Collections</h1>\n\n          <Row className='justify-content-end pr-3'>\n            <Button\n              color='link'\n              onClick={() => dispatch(push('/create-collection'))}\n            >Create Collection</Button>\n          </Row>\n          <CollectionList collections={collections} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  collections: state.coreData.collections || [],\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CollectionListPage);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Row, Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input,\n  ButtonGroup, Col,\n} from 'reactstrap';\nimport { useDropzone } from 'react-dropzone';\nimport { faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  STATUS_PENDING,\n  UPLOAD_ASSET,\n  ROTATE_IMAGE_LEFT,\n  ROTATE_IMAGE_RIGHT,\n} from '../constants';\n\nconst CardModal = ({ dispatch, media, mediaContext, collection: {tags =[]} = {}, card: editCard, onSave, onClose }) => {\n  const [ card, setCard ] = useState(editCard);\n  const onDrop = useCallback((files) => {\n    const acceptedFiles = (files || []).filter(() => true);\n    if (!acceptedFiles.length) {\n      return;\n    }\n    dispatch({\n      type: UPLOAD_ASSET,\n      status: STATUS_PENDING,\n      mediaContext,\n      file: acceptedFiles[0] });\n  }, []);\n  const onRotateLeft = useCallback((e) => {\n    e.stopPropagation();\n    const editedMedia = media ? media : { id: editCard.media_id, ...editCard.media };\n    dispatch({ type: ROTATE_IMAGE_LEFT, status: STATUS_PENDING, mediaContext, media: editedMedia });\n  });\n  const onRotateRight = useCallback((e) => {\n    e.stopPropagation();\n    const editedMedia = media ? media : { id: editCard.media_id, ...editCard.media };\n    dispatch({ type: ROTATE_IMAGE_RIGHT, status: STATUS_PENDING, mediaContext, media: editedMedia });\n  });\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({ onDrop });\n\n  useEffect(() => {\n    setCard({ ...editCard, isPristine: true });\n  }, [editCard]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader>Card</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup row inline>\n            <Label className='col-form-label text-right col-3'>Front</Label>\n            <div className='col-9'>\n              <Input\n                className='font-weight-bold'\n                value={card.front}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, isPristine: false, front: value })\n                }}\n              />\n            </div>\n          </FormGroup>\n          <FormGroup row inline>\n            <Label className='col-form-label text-right col-3'>Back</Label>\n            <div className='col-9'>\n              <Input\n                className='font-weight-bold'\n                value={card.back}\n                placeholder={'Empty'}\n                onChange={({ target: { value } }) => {\n                  setCard({ ...card, isPristine: false, back: value })\n                }}\n              />\n            </div>\n          </FormGroup>\n          <FormGroup row inline>\n            <Label className='col-form-label text-right col-3'>Tags</Label>\n            <Col widths={[9]} className='pt-2'>\n            {(tags || []).map(tag => (\n              <Label className='form-check'>\n                <Input type='checkbox'\n                       checked={card.tags.includes(tag)}\n                       onChange={({target: {checked}}) => {\n                         let tags;\n                         if (checked) {\n                           tags = [...card.tags, tag];\n                         } else {\n                           tags = [...card.tags];\n                           tags.splice(tags.indexOf(tag), 1);\n                         }\n                         setCard({ ...card, isPristine: false, tags });\n                       }}\n                />\n                {tag}\n              </Label>\n            ))}\n            </Col>\n          </FormGroup>\n          <div {...getRootProps()} className=\"border border-secondary bg-light text-center pt-4 pb-4\">\n            <input {...getInputProps()} />\n            {\n              isDragActive ?\n                <p className=\"m-0\">Drop the files here ...</p> :\n                <p className=\"m-0\">Drop in a picture or sound file</p>\n            }\n            {(editCard && editCard.media && editCard.media.url) ?\n              <Row className=\"justify-content-center card-media\">\n                <img className=\"card-media-image\" src={`${editCard.media.url}?t=${Date.now()}`} />\n                <div className=\"card-media-controls\">\n                  <ButtonGroup>\n                    <Button color=\"light\" onClick={onRotateLeft}><FontAwesomeIcon icon={faUndo}/></Button>\n                    <Button color=\"light\" onClick={onRotateRight}><FontAwesomeIcon icon={faRedo}/></Button>\n                  </ButtonGroup>\n                </div>\n              </Row>\n            :\n            media ?\n              <Row className=\"justify-content-center card-media\">\n                <img className=\"card-media-image\" src={`${media.url}?t=${Date.now()}`} />\n                <div className=\"card-media-controls\">\n                  <ButtonGroup>\n                    <Button color=\"light\" onClick={onRotateLeft}><FontAwesomeIcon icon={faUndo}/></Button>\n                    <Button color=\"light\" onClick={onRotateRight}><FontAwesomeIcon icon={faRedo}/></Button>\n                  </ButtonGroup>\n                </div>\n              </Row>\n            :\n            null\n            }\n          </div>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='default' onClick={() => onClose()}>Cancel</Button>\n        <Button color='primary' onClick={() => {\n          if (media && card.media_id !== media.id) {\n            onSave({ ...card, media_id: media.id })\n          } else {\n            onSave(card);\n          }\n        }}>Save</Button>\n      </ModalFooter>\n    </Modal>\n  )\n};\n\nCardModal.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  card: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  mediaContext: PropTypes.string.isRequired,\n  media: PropTypes.object,\n};\n\nCardModal.defaultProps = {\n  card: { isNew: true },\n};\n\nconst mapStateToProps = (state, props) => {\n  const { mediaContext } = props;\n  if (!(mediaContext in state.media)) {\n    return {\n      media: null,\n    }\n  }\n\n  return {\n    media: state.media[mediaContext]\n  };\n};\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CardModal);\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, ModalHeader, ModalBody, ModalFooter, Button,\n  Form, FormGroup, Label,\n  Input,\n} from 'reactstrap';\nimport { get } from '../sagas/utils';\nimport {\n  CARD_ACTION_MOVE,\n  CARD_ACTION_COPY,\n  CARD_ACTION_CLONE,\n} from '../constants';\n\nconst CardActionsModal = ({ dispatch, card, onAccept, onClose }) => {\n  const [choice, setChoice] = useState(null);\n  const [collections, setCollections] = useState(null);\n  const fetchCollections = useCallback(() => get('/collections'), []);\n  const [collectionId, setCollectionId] = useState(null);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader><span className='font-italic'>{card.front}</span></ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup row inline>\n            <Label className='col-3 col-form-label text-right'>Action</Label>\n            <div className='form-check-inline'>\n              <label className='form-check-label'>\n                <Input\n                  type='radio' className='form-check-input' name='action'\n                  onClick={() => {\n                    setChoice(CARD_ACTION_MOVE);\n                    fetchCollections().then(({ collections }) => setCollections(collections));\n                  }}\n                /> Move\n              </label>\n            </div>\n            <div className='form-check-inline'>\n              <label className='form-check-label'>\n                <Input\n                  type='radio' className='form-check-input' name='action'\n                  onClick={() => {\n                    setChoice(CARD_ACTION_COPY);\n                    fetchCollections().then(({ collections }) => setCollections(collections));\n                  }}\n                /> Copy\n              </label>\n            </div>\n            <div className='form-check-inline'>\n              <label className='form-check-label'>\n                <Input\n                  type='radio' className='form-check-input' name='action'\n                  onClick={() => {\n                    setChoice(CARD_ACTION_CLONE);\n                    setCollections(null);\n                  }}\n                /> Clone\n              </label>\n            </div>\n          </FormGroup>\n          {collections &&\n          <FormGroup>\n            <Label>Move/Copy to...</Label>\n            <select className='form-control' onChange={({ target: { value } }) => setCollectionId(value)}>\n              {collections.map(collection => (\n                <option value={collection.id}>{collection.title}</option>\n              ))}\n            </select>\n          </FormGroup>\n          }\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='default' onClick={onClose}>Cancel</Button>\n        <Button color='primary' onClick={() => onAccept({ action: choice, cardId: card.id, collectionId })}>OK</Button>\n      </ModalFooter>\n    </Modal>\n  )\n};\n\nCardActionsModal.propTypes = {\n  card: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAccept: PropTypes.func.isRequired,\n};\n\nexport default connect(null, dispatch => ({ dispatch }))(CardActionsModal);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ListGroup from 'reactstrap/es/ListGroup';\nimport ListGroupItem from 'reactstrap/es/ListGroupItem';\nimport { useParams } from 'react-router';\nimport { replace } from 'react-router-redux';\n\nimport {\n  VIEW_COLLECTION,\n  UPDATE_COLLECTION,\n  STATUS_PENDING,\n  CREATE_CARD_IN_COLLECTION,\n  UPDATE_CARD_IN_COLLECTION,\n  MOVE_CARD,\n  COPY_CARD,\n  CLONE_CARD,\n  CARD_ACTION_COPY, CARD_ACTION_MOVE, CARD_ACTION_CLONE,\n} from '../constants';\nimport {\n  Navbar, Nav, NavItem, NavLink,\n  Button, Input, Label, Row,\n  Form, FormGroup,\n} from 'reactstrap';\n\nimport CardModal from '../components/CardModal';\nimport CardActionsModal from '../components/CardActionsModal';\n\nconst CollectionEditPage = ({ dispatch, collection: editedCollection }) => {\n  const { collectionId } = useParams();\n  const [ collection, setCollection ] = useState({});\n  const [ cardModalShown, setCardModalShown ] = useState(false);\n  const [ editCardModalShown, setEditCardModalShown ] = useState(false);\n  const [ editCard, setEditCard ] = useState(null);\n  const [ cardActionsModalShown, setCardActionsModalShown ] = useState(false);\n\n  const updateCard = useCallback(({target: { checked }}, card, tag) => {\n    let tags;\n    if (checked) {\n      tags = [...card.tags, tag];\n    } else {\n      tags = [...card.tags];\n      tags.splice(tags.indexOf(tag), 1);\n    }\n\n    const updatedCard = {\n      ...card,\n      tags,\n    };\n\n    dispatch({\n      type: UPDATE_CARD_IN_COLLECTION,\n      status: STATUS_PENDING,\n      collection: editedCollection,\n      card: updatedCard,\n    });\n  }, [collection]);\n\n  useEffect(() => {\n    dispatch({ type: VIEW_COLLECTION, status: STATUS_PENDING, collectionId });\n  }, []);\n  useEffect(() => {\n    setCollection(editedCollection);\n    setCardModalShown(false);\n    setEditCardModalShown(false);\n    setCardActionsModalShown(false);\n  }, [editedCollection]);\n\n  if (!(collection && collection.items)) {\n    return <div className='text-center'>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Navbar>\n        <Nav>\n          <NavItem>\n            <NavLink\n              href='javascript: void 0'\n              onClick={() => dispatch(replace('/collections'))}\n            >&lsaquo; Collections</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12'>\n            <h1 className='page-title'>Your Collection</h1>\n            <Form>\n              <FormGroup row inline>\n                <Label className='col-form-label text-right col-3'>Title</Label>\n                <div className='col-9'>\n                  <Input\n                    className='font-weight-bold'\n                    value={collection.title}\n                    placeholder={'No name'}\n                    onChange={({ target: { value } }) => {\n                      setCollection({ ...collection, title: value });\n                    }}\n                    onBlur={() => {\n                      dispatch({ type: UPDATE_COLLECTION, status: STATUS_PENDING, collection })\n                    }}\n                  />\n                </div>\n              </FormGroup>\n              <FormGroup row inline>\n                <Label className='col-form-label text-right col-3'>Cards</Label>\n                <div className=\"col-9\">\n                  <ListGroup>\n                    {(collection.items || []).map(item => (\n                      <ListGroupItem key={item.id} className='d-flex align-items-baseline pt-1 pb-1 pr-0'>\n                        <div className='flex-grow-1'>{item.front}</div>\n                        <div className='flex-grow-0'>\n                          <div className='d-inline-block'>\n                            <Label className='form-check-label pr-1'>Tags:</Label>\n                            {(collection.tags || []).map(tag => (\n                              <Label className='form-check-inline'>\n                                <Input type='checkbox'\n                                       checked={item.tags.includes(tag)}\n                                       onChange={(e) => updateCard(e, item, tag)}\n                                />\n                                {tag}\n                              </Label>\n                            ))}\n                          </div>\n                          <Button\n                            size='sm'\n                            color='link'\n                            onClick={() => {\n                              setEditCard(item);\n                              setEditCardModalShown(true);\n                            }}\n                          >View</Button>\n                          <Button\n                            size='sm'\n                            color='default'\n                            onClick={() => {\n                              setEditCard(item);\n                              setCardActionsModalShown(true);\n                            }}\n                          >&hellip;</Button>\n                        </div>\n                      </ListGroupItem>\n                    ))}\n                  </ListGroup>\n                </div>\n              </FormGroup>\n            </Form>\n\n            <Row className='pt-3 justify-content-center'>\n              <Button\n                color='primary'\n                onClick={() => setCardModalShown(true)}\n              >Add new Card</Button>\n            </Row>\n          </div>\n        </div>\n        {cardModalShown &&\n        <CardModal\n          mediaContext=\"card\"\n          onClose={() => setCardModalShown(false)}\n          onSave={(card) => {\n            dispatch({ type: CREATE_CARD_IN_COLLECTION, status: STATUS_PENDING, collection, card });\n          }}\n        />}\n        {editCardModalShown && editCard &&\n        <CardModal\n          mediaContext=\"card\"\n          card={editCard}\n          collection={collection}\n          onClose={() => setEditCardModalShown(false)}\n          onSave={(card) => {\n            dispatch({ type: UPDATE_CARD_IN_COLLECTION, status: STATUS_PENDING, collection, card });\n          }}\n        />}\n        {cardActionsModalShown && editCard &&\n        <CardActionsModal\n          card={editCard}\n          onClose={() => setCardActionsModalShown(false)}\n          onAccept={({ action, cardId, collectionId }) => {\n            if (action === CARD_ACTION_MOVE) {\n              dispatch({\n                type: MOVE_CARD,\n                status: STATUS_PENDING,\n                cardId,\n                fromCollectionId: editedCollection.id,\n                toCollectionId: collectionId\n              });\n            } else if (action === CARD_ACTION_COPY) {\n              dispatch({\n                type: COPY_CARD,\n                status: STATUS_PENDING,\n                cardId,\n                toCollectionId: collectionId\n              });\n            } else if (action === CARD_ACTION_CLONE) {\n              dispatch({\n                type: CLONE_CARD,\n                status: STATUS_PENDING,\n                cardId,\n                toCollectionId: editedCollection.id,\n              });\n            }\n          }}\n        />\n        }\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  collection: state.coreData.editCollection || { id: null },\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CollectionEditPage);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { replace } from 'react-router-redux';\n\nimport {\n  STATUS_PENDING,\n  REVIEW_COLLECTION,\n  ANSWER_MATCH,\n} from '../constants';\nimport { Navbar, Nav, NavItem, NavLink, Button, Row, Label, Table } from 'reactstrap';\n\nimport '../App.css';\n\nconst CollectionReviewPage = ({ dispatch, collection, cardIndex = 0, lastScorecard = null, scorecards = null, complete = false }) => {\n  const { collectionId } = useParams();\n  const [ card, setCard ] = useState({});\n\n  useEffect(() => {\n    if (collectionId) {\n      dispatch({ type: REVIEW_COLLECTION, status: STATUS_PENDING, collectionId });\n    }\n  }, [collectionId]);\n  useEffect(() => {\n    if (collection && collection.items) {\n      setCard(collection.items[0]);\n    }\n  }, [collection]);\n  useEffect(() => {\n    setCard(collection.items[cardIndex]);\n  }, [collection, cardIndex]);\n\n  if (!(collection && card && card.choices)) {\n    return <div className='text-center'>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Navbar>\n        <Nav>\n          <NavItem>\n            <NavLink\n              href='javascript: void 0'\n              onClick={() => dispatch(replace('/collections'))}\n            >&lsaquo; Collections</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n      <div className='container'>\n        <Row className='justify-content-center'>\n          <div className='col-12 col-sm-10'>\n            <h1 className='page-title'>Review</h1>\n            {lastScorecard && !complete &&\n            <Row>\n              <Label className='col-4'>Last card</Label>\n              <div className='col-4'>{lastScorecard.card.front}</div>\n              <div className='col-4'>\n                {lastScorecard.correct ?\n                  <span>Correct!</span>\n                  :\n                  <span>Wrong!!!</span>\n                }\n              </div>\n            </Row>\n            }\n            {!complete &&\n            <div className='w-100 p-3 p-sm-5 karteikarten-card'>\n              <h3 className={`display-4 text-center font-weight-bold ${(!(card.media && card.media.url)) && 'mb-5'}`}>{card.front}</h3>\n              {card.media && card.media.url &&\n              <Row className=\"justify-content-center mb-5\">\n                <img src={card.media.url} />\n              </Row>\n              }\n              <Row key={card.id}>\n                {card.choices.map((choice) => (\n                  <Button\n                    onClick={() => dispatch({\n                      type: ANSWER_MATCH,\n                      status: STATUS_PENDING,\n                      answer: {\n                        card,\n                        choice,\n                      }\n                    })}\n                    key={`${card.id}-${choice.id}`}\n                    color='link'\n                    className='w-50'\n                  >{choice.back}</Button>\n                ))}\n              </Row>\n            </div>\n            }\n            {complete && scorecards &&\n            <>\n              <div className='w-100 p-3 p-sm-5 karteikarten-card'>\n                <h2>{collection.title}</h2>\n                <Table responsive>\n                  <thead>\n                  <tr>\n                    <th></th>\n                    <th>Correct</th>\n                    <th>Wrong</th>\n                    <th>Skipped</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {scorecards.map(({ card, ...scorecard }) => (\n                    <tr>\n                      <td>{card.front}</td>\n                      <td>{scorecard.corrects}</td>\n                      <td>{scorecard.wrongs}</td>\n                      <td>{scorecard.skippeds}</td>\n                    </tr>\n                  ))}\n                  </tbody>\n                </Table>\n              </div>\n              <div className=\"w-100 text-center\">\n                <Button\n                  color='link'\n                  onClick={() => dispatch(replace(`/review/${collection.id}`))}\n                >Retry the collection</Button>\n              </div>\n            </>\n            }\n          </div>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  collection: state.review.reviewCollection || { items: [] },\n  cardIndex: state.review.cardIndex || 0,\n  lastScorecard: state.review.scorecards.length ? state.review.scorecards[state.review.scorecards.length - 1] : null,\n  complete: state.review.complete,\n  scorecards: state.review.scorecards,\n});\n\nexport default connect(mapStateToProps, dispatch => ({ dispatch }))(CollectionReviewPage);\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { Router, Route, Switch, Redirect } from 'react-router';\nimport 'bootstrap/scss/bootstrap.scss';\n\nimport appHistory from './appHistory';\nimport configureStore from './store';\n\nimport AppNavbar from './components/AppNavbar';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport CreateCollectionPage from './pages/CreateCollectionPage';\nimport CollectionListPage from './pages/CollectionListPage';\nimport CollectionEditPage from './pages/CollectionEditPage';\nimport CollectionReviewPage from './pages/CollectionReviewPage';\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={appHistory}>\n          <>\n            <AppNavbar className=\"karteikarten-topnav\" />\n            <Switch>\n              <Route path=\"/\" exact component={HomePage} />\n              <Route path=\"/login\" exact component={LoginPage} />\n              <Route path=\"/create-collection\" exact component={CreateCollectionPage} />\n              <Route path=\"/create-collection/:step\" exact component={CreateCollectionPage} />\n              <Route path=\"/collections\" exact component={CollectionListPage} />\n              <Route path=\"/collections/:collectionId\" exact component={CollectionEditPage} />\n              <Route path=\"/review/result\" exact component={CollectionReviewPage} />\n              <Route path=\"/review/:collectionId\" exact component={CollectionReviewPage} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}